name: PR Description Validation

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  validate-pr-description:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Get PR information
      id: get-pr-info
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.payload.pull_request;
          if (!pr) {
            core.setFailed("This action can only run on pull requests.");
          }
          core.setOutput("description", JSON.stringify(pr.body || ""));
          core.setOutput("author", pr.user.login || "");

    - name: Skip validation if PR was created by Dependabot
      id: skip-validation
      run: |
        AUTHOR="${{ steps.get-pr-info.outputs.author }}"
        if [[ "$AUTHOR" == "dependabot[bot]" ]]; then
          echo "PR was created by Dependabot. Skipping validation."
          exit 0
        fi

    - name: Validate PR description
      id: validate
      shell: bash
      run: |
        # Capture the PR description
        PR_BODY=$(echo "${{ steps.get-pr-info.outputs.description }}" | jq -r .)

        # Debug: Output the PR description
        echo "::notice::Raw PR Body: \"$PR_BODY\""

        # Normalize newlines (\n and \r\n) by replacing them with a double space
        PR_BODY=$(echo "$PR_BODY" | tr -s '\r\n' '  ' | tr '\n' '  ')

        # Debug: Show PR body after normalization
        echo "::notice::Normalized PR Body: \"$PR_BODY\""

        # Use grep to check for the required patterns (with PCRE support)
        echo "$PR_BODY" | grep -Piq "(closes\s*\[#\d+\]|closes\s*\[AB#\d+\]|closes\s*#\d+|closes\s*AB#\d+|CLOSES\s*\[#\d+\]|CLOSES\s*\[AB#\d+\]|CLOSES\s*#\d+|CLOSES\s*AB#\d+)" || {
          echo "Error: PR description does not contain a closing issue/task link (e.g., 'closes #123' or 'closes AB#123')."
          exit 1
        }
